{"version":3,"file":"Index-k8FxGY8R.js","sources":["../../../../js/dialogue/Switch.svelte","../../../../js/dialogue/Dialogue.svelte","../../../../js/dialogue/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\t// based on https://svelte.dev/playground/d65a4e9f0ae74d1eb1b08d13e428af32?version=3.35.0\n\n\timport { createEventDispatcher } from \"svelte\";\n\texport let label;\n\texport let checked = false;\n\texport let disabled = false;\n\tconst dispatch = createEventDispatcher();\n\t// @ts-ignore\n\tfunction handleClick(event: Event): void {\n\t\tconst target = event.target;\n\t\t// @ts-ignore\n\t\tconst state = target.getAttribute(\"aria-checked\");\n\t\tchecked = state === \"true\" ? false : true;\n\t\tdispatch(\"click\", { checked });\n\t}\n</script>\n\n<div class=\"s s--slider\" style=\"font-size:var(--font-size-sm)px\">\n\t<button\n\t\trole=\"switch\"\n\t\taria-checked={checked}\n\t\ton:click={handleClick}\n\t\t{disabled}\n\t>\n\t</button>\n\t<span>{label}</span>\n</div>\n\n<style>\n\t.s--slider {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.s--slider button {\n\t\twidth: 3em;\n\t\theight: 1.6em;\n\t\tposition: relative;\n\t\tmargin: 0 0.5em 0 0;\n\t\tbackground: var(--button-secondary-background-fill);\n\t\tborder: none;\n\t}\n\n\t.s--slider button[disabled] {\n\t\tcursor: not-allowed;\n\t}\n\n\t.s--slider button::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\twidth: 1.3em;\n\t\theight: 1.3em;\n\t\tbackground: #fff;\n\t\ttop: 0.13em;\n\t\tright: 1.5em;\n\t\ttransition: transform 0.3s;\n\t}\n\n\t.s--slider button[aria-checked=\"true\"] {\n\t\tbackground-color: var(--color-accent);\n\t}\n\n\t.s--slider button[aria-checked=\"true\"]::before {\n\t\ttransform: translateX(1.3em);\n\t\ttransition: transform 0.3s;\n\t}\n\n\t.s--slider button:focus {\n\t\tbox-shadow: 0 0px 0px 1px var(--color-accent);\n\t}\n\n\t/* Slider Design Option */\n\t.s--slider button {\n\t\tborder-radius: 1.5em;\n\t}\n\n\t.s--slider button::before {\n\t\tborder-radius: 100%;\n\t}\n\n\t.s--slider button:focus {\n\t\tbox-shadow: 0 0px 8px var(--accent-color);\n\t\tborder-radius: 1.5em;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\timport { Copy, Check, Send, Plus, Trash } from \"@gradio/icons\";\n\timport { fade } from \"svelte/transition\";\n\timport { BaseDropdown, BaseDropdownOptions } from \"@gradio/dropdown\";\n\timport type { SelectData, CopyData } from \"@gradio/utils\";\n\timport type { DialogueLine } from \"./utils\";\n\timport Switch from \"./Switch.svelte\";\n\n\texport let speakers: string[] = [];\n\texport let tags: string[] = [];\n\texport let value: DialogueLine[] | string = [];\n\texport let value_is_output = false;\n\texport let placeholder: string | undefined = undefined;\n\texport let label: string;\n\texport let info: string | undefined = undefined;\n\texport let disabled = false;\n\texport let show_label = true;\n\texport let container = true;\n\texport let max_lines: number | undefined = undefined;\n\texport let show_copy_button = false;\n\texport let show_submit_button = true;\n\texport let color_map: Record<string, string> | null = null;\n\tlet checked = false;\n\n\texport let server: {\n\t\tformat: (body: DialogueLine[]) => Promise<string>;\n\t\tunformat: (body: object) => Promise<DialogueLine[]>;\n\t};\n\n\tlet dialogue_lines: DialogueLine[] =\n\t\tvalue && typeof value !== \"string\" ? [...value] : [];\n\tlet dialogue_container_element: HTMLDivElement;\n\n\tlet showTagMenu = false;\n\tlet currentLineIndex = -1;\n\tlet selectedOptionIndex = 0;\n\tlet filtered_tags: string[] = [];\n\tlet input_elements: (HTMLInputElement | HTMLTextAreaElement)[] = [];\n\tlet textarea_element: HTMLTextAreaElement;\n\tlet old_value = JSON.stringify(value);\n\tlet offset_from_top = 0;\n\tlet copied = false;\n\tlet timer: any;\n\tlet textbox_value = \"\";\n\tlet hoveredSpeaker: string | null = null;\n\n\tconst defaultColorNames = [\n\t\t\"red\",\n\t\t\"green\",\n\t\t\"blue\",\n\t\t\"yellow\",\n\t\t\"purple\",\n\t\t\"teal\",\n\t\t\"orange\",\n\t\t\"cyan\",\n\t\t\"lime\",\n\t\t\"pink\"\n\t];\n\n\tconst colorNameToHex: Record<string, string> = {\n\t\tred: \"rgba(254, 202, 202, 0.7)\",\n\t\tgreen: \"rgba(209, 250, 229, 0.7)\",\n\t\tblue: \"rgba(219, 234, 254, 0.7)\",\n\t\tyellow: \"rgba(254, 243, 199, 0.7)\",\n\t\tpurple: \"rgba(233, 213, 255, 0.7)\",\n\t\tteal: \"rgba(204, 251, 241, 0.7)\",\n\t\torange: \"rgba(254, 215, 170, 0.7)\",\n\t\tcyan: \"rgba(207, 250, 254, 0.7)\",\n\t\tlime: \"rgba(217, 249, 157, 0.7)\",\n\t\tpink: \"rgba(252, 231, 243, 0.7)\"\n\t};\n\n\tlet speakerColors: Record<string, string> = {};\n\t$: {\n\t\tif (color_map) {\n\t\t\tspeakerColors = { ...color_map };\n\t\t} else {\n\t\t\tspeakerColors = {};\n\t\t\tspeakers.forEach((speaker, index) => {\n\t\t\t\tconst colorName = defaultColorNames[index % defaultColorNames.length];\n\t\t\t\tspeakerColors[speaker] = colorNameToHex[colorName];\n\t\t\t});\n\t\t}\n\t}\n\n\tif (speakers.length === 0) {\n\t\tchecked = true;\n\t\tvalue = \"\";\n\t}\n\n\t$: if (\n\t\tvalue &&\n\t\tvalue.length === 0 &&\n\t\tdialogue_lines.length === 0 &&\n\t\tspeakers.length !== 0\n\t) {\n\t\tdialogue_lines = [{ speaker: speakers[0], text: \"\" }];\n\t\tvalue = [...dialogue_lines];\n\t\tif (typeof value !== \"string\") {\n\t\t\tconst formatted = value\n\t\t\t\t.map((line: DialogueLine) => `${line.speaker}: ${line.text}`)\n\t\t\t\t.join(\" \");\n\t\t\ttextbox_value = formatted;\n\t\t}\n\t}\n\n\t$: {\n\t\tif (dialogue_lines.length > input_elements.length) {\n\t\t\tinput_elements = [\n\t\t\t\t...input_elements,\n\t\t\t\t...Array(dialogue_lines.length - input_elements.length).fill(null)\n\t\t\t];\n\t\t} else if (dialogue_lines.length < input_elements.length) {\n\t\t\tinput_elements = input_elements.slice(0, dialogue_lines.length);\n\t\t}\n\n\t\ttick().then(() => {\n\t\t\tinput_elements.forEach((element) => {\n\t\t\t\tif (element && element instanceof HTMLTextAreaElement) {\n\t\t\t\t\telement.style.height = \"auto\";\n\t\t\t\t\telement.style.height = element.scrollHeight + \"px\";\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction add_line(index: number): void {\n\t\tconst newSpeaker = speakers.length > 0 ? speakers[0] : \"\";\n\t\tdialogue_lines = [\n\t\t\t...dialogue_lines.slice(0, index + 1),\n\t\t\t{ speaker: newSpeaker, text: \"\" },\n\t\t\t...dialogue_lines.slice(index + 1)\n\t\t];\n\t\tif (typeof value !== \"string\") {\n\t\t\tconst formatted = value\n\t\t\t\t.map((line: DialogueLine) => `${line.speaker}: ${line.text}`)\n\t\t\t\t.join(\" \");\n\t\t\ttextbox_value = formatted;\n\t\t}\n\n\t\ttick().then(() => {\n\t\t\tif (input_elements[index + 1]) {\n\t\t\t\tinput_elements[index + 1].focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction delete_line(index: number): void {\n\t\tdialogue_lines = [\n\t\t\t...dialogue_lines.slice(0, index),\n\t\t\t...dialogue_lines.slice(index + 1)\n\t\t];\n\t\tif (typeof value !== \"string\") {\n\t\t\tconst formatted = value\n\t\t\t\t.map((line: DialogueLine) => `${line.speaker}: ${line.text}`)\n\t\t\t\t.join(\" \");\n\t\t\ttextbox_value = formatted;\n\t\t}\n\t}\n\n\tfunction update_line(\n\t\tindex: number,\n\t\tkey: keyof DialogueLine,\n\t\tvalue: string\n\t): void {\n\t\tdialogue_lines[index][key] = value;\n\t\tdialogue_lines = [...dialogue_lines];\n\t\tif (typeof value !== \"string\") {\n\t\t\tconst formatted = dialogue_lines\n\t\t\t\t.map((line: DialogueLine) => `${line.speaker}: ${line.text}`)\n\t\t\t\t.join(\" \");\n\t\t\ttextbox_value = formatted;\n\t\t}\n\t}\n\n\tfunction handle_input(event: Event, index: number): void {\n\t\tconst input = (event.target as HTMLInputElement) || HTMLTextAreaElement;\n\t\tif (input && !input_elements[index]) {\n\t\t\tinput_elements[index] = input;\n\t\t}\n\n\t\tconst cursor_position = input.selectionStart || 0;\n\t\tconst text = input.value;\n\t\tlet show_menu = false;\n\t\tlet position_reference_index = -1;\n\n\t\tif (text[cursor_position - 1] === \":\") {\n\t\t\tcurrentLineIndex = index;\n\t\t\tposition_reference_index = cursor_position;\n\t\t\tconst search_text = get_tag_search_text(text, cursor_position);\n\t\t\tfiltered_tags = tags.filter(\n\t\t\t\t(tag) =>\n\t\t\t\t\tsearch_text === \"\" ||\n\t\t\t\t\ttag.toLowerCase().includes(search_text.toLowerCase())\n\t\t\t);\n\t\t\tshow_menu = filtered_tags.length > 0;\n\t\t\tselectedOptionIndex = 0;\n\t\t} else {\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursor_position - 1);\n\t\t\tif (\n\t\t\t\tlastColonIndex >= 0 &&\n\t\t\t\t!text.substring(lastColonIndex + 1, cursor_position).includes(\" \")\n\t\t\t) {\n\t\t\t\tcurrentLineIndex = index;\n\t\t\t\tposition_reference_index = lastColonIndex + 1; // Position menu relative to the start of the potential tag\n\t\t\t\tconst searchText = text.substring(lastColonIndex + 1, cursor_position);\n\t\t\t\tfiltered_tags = tags.filter(\n\t\t\t\t\t(tag) =>\n\t\t\t\t\t\tsearchText === \"\" ||\n\t\t\t\t\t\ttag.toLowerCase().includes(searchText.toLowerCase())\n\t\t\t\t);\n\t\t\t\tshow_menu = filtered_tags.length > 0;\n\t\t\t\tselectedOptionIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (show_menu && position_reference_index !== -1) {\n\t\t\tshowTagMenu = true;\n\t\t\tconst input_rect = input.getBoundingClientRect();\n\t\t\t// Position menu below the current input by calculating the distance from the top of the container\n\t\t\t// and use 1.5 times the input height.\n\t\t\tif (dialogue_container_element) {\n\t\t\t\tconst container_rect =\n\t\t\t\t\tdialogue_container_element.getBoundingClientRect();\n\t\t\t\toffset_from_top =\n\t\t\t\t\tcontainer_rect.top + input_rect.height * (index + 1.5);\n\t\t\t}\n\t\t} else {\n\t\t\tshowTagMenu = false;\n\t\t}\n\t}\n\n\tfunction get_tag_search_text(text: string, cursorPosition: number): string {\n\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\tif (lastColonIndex >= 0) {\n\t\t\treturn text.substring(lastColonIndex + 1, cursorPosition);\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tasync function insert_selected_tag(): Promise<void> {\n\t\tconst tag = filtered_tags[selectedOptionIndex];\n\t\tif (tag) {\n\t\t\tlet text;\n\t\t\tlet currentInput;\n\t\t\tif (checked) {\n\t\t\t\tcurrentInput = textarea_element;\n\t\t\t\ttext = textbox_value;\n\t\t\t} else {\n\t\t\t\tcurrentInput = input_elements[currentLineIndex];\n\t\t\t\ttext = dialogue_lines[currentLineIndex].text;\n\t\t\t}\n\t\t\tconst cursorPosition = currentInput?.selectionStart || 0;\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\t\tif (lastColonIndex >= 0) {\n\t\t\t\tconst beforeColon = text.substring(0, lastColonIndex);\n\t\t\t\tconst afterCursor = text.substring(cursorPosition);\n\n\t\t\t\tif (checked) {\n\t\t\t\t\t// plain text mode: don't filter speaker tags\n\t\t\t\t\tconst newText = `${beforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\ttextbox_value = newText;\n\t\t\t\t\tif (speakers.length === 0) {\n\t\t\t\t\t\tvalue = newText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = await server.unformat({ text: newText });\n\t\t\t\t\t}\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tif (textarea_element) {\n\t\t\t\t\t\t\tconst newCursorPosition = beforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\ttextarea_element.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextarea_element.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// dialogue line mode\n\t\t\t\t\tconst filteredBeforeColon = beforeColon\n\t\t\t\t\t\t.replace(/\\[S\\d+\\]/g, \"\")\n\t\t\t\t\t\t.trim();\n\t\t\t\t\tconst newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\tupdate_line(currentLineIndex, \"text\", newText);\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tconst updatedInput = input_elements[currentLineIndex];\n\t\t\t\t\t\tif (updatedInput) {\n\t\t\t\t\t\t\tconst newCursorPosition =\n\t\t\t\t\t\t\t\tfilteredBeforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\tupdatedInput.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tupdatedInput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshowTagMenu = false;\n\t\t\tselectedOptionIndex = 0;\n\t\t}\n\t}\n\n\tasync function insert_tag(e: CustomEvent): Promise<void> {\n\t\tconst tag = tags[e.detail.target.dataset.index];\n\t\tif (tag) {\n\t\t\tlet text;\n\t\t\tlet currentInput;\n\t\t\tif (checked) {\n\t\t\t\tcurrentInput = textarea_element;\n\t\t\t\ttext = textbox_value;\n\t\t\t} else {\n\t\t\t\tcurrentInput = input_elements[currentLineIndex];\n\t\t\t\ttext = dialogue_lines[currentLineIndex].text;\n\t\t\t}\n\t\t\tconst cursorPosition = currentInput?.selectionStart || 0;\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\t\tif (lastColonIndex >= 0) {\n\t\t\t\tconst beforeColon = text.substring(0, lastColonIndex);\n\t\t\t\tconst afterCursor = text.substring(cursorPosition);\n\n\t\t\t\tif (checked) {\n\t\t\t\t\t// plain text mode: don't filter speaker tags\n\t\t\t\t\tconst newText = `${beforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\ttextbox_value = newText;\n\t\t\t\t\tif (speakers.length === 0) {\n\t\t\t\t\t\tvalue = newText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = await server.unformat({ text: newText });\n\t\t\t\t\t}\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tif (textarea_element) {\n\t\t\t\t\t\t\tconst newCursorPosition = beforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\ttextarea_element.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextarea_element.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// dialogue line mode\n\t\t\t\t\tconst filteredBeforeColon = beforeColon\n\t\t\t\t\t\t.replace(/\\[S\\d+\\]/g, \"\")\n\t\t\t\t\t\t.trim();\n\t\t\t\t\tconst newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\tupdate_line(currentLineIndex, \"text\", newText);\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tconst updatedInput = input_elements[currentLineIndex];\n\t\t\t\t\t\tif (updatedInput) {\n\t\t\t\t\t\t\tconst newCursorPosition =\n\t\t\t\t\t\t\t\tfilteredBeforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\tupdatedInput.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tupdatedInput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshowTagMenu = false;\n\t\t\tselectedOptionIndex = 0;\n\t\t}\n\t}\n\n\tfunction handle_click_outside(event: MouseEvent): void {\n\t\tif (showTagMenu) {\n\t\t\tconst target = event.target as Node;\n\t\t\tconst tagMenu = document.getElementById(\"tag-menu\");\n\t\t\tif (tagMenu && !tagMenu.contains(target)) {\n\t\t\t\tshowTagMenu = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DialogueLine[] | string;\n\t\tsubmit: undefined;\n\t\tblur: undefined;\n\t\tselect: SelectData;\n\t\tinput: undefined;\n\t\tfocus: undefined;\n\t\tcopy: CopyData;\n\t}>();\n\n\tfunction handle_change(): void {\n\t\tdispatch(\"change\", value);\n\t\tif (!value_is_output) {\n\t\t\tdispatch(\"input\");\n\t\t}\n\t}\n\n\tfunction sync_value(dialogueLines: DialogueLine[]): void {\n\t\tif (speakers.length !== 0) {\n\t\t\tvalue = [...dialogueLines];\n\t\t\tif (JSON.stringify(value) !== old_value) {\n\t\t\t\thandle_change();\n\t\t\t\told_value = JSON.stringify(value);\n\t\t\t\tconst formatted = value\n\t\t\t\t\t.map((line: DialogueLine) => `${line.speaker}: ${line.text}`)\n\t\t\t\t\t.join(\" \");\n\t\t\t\ttextbox_value = formatted;\n\t\t\t}\n\t\t}\n\t}\n\n\t$: sync_value(dialogue_lines);\n\n\t$: if (JSON.stringify(value) !== old_value) {\n\t\tif (value == null) {\n\t\t\tdialogue_lines = [];\n\t\t}\n\t\told_value = JSON.stringify(value);\n\t\tif (value && typeof value !== \"string\") {\n\t\t\tdialogue_lines = [...value];\n\t\t\tvalue_to_string(value).then((formatted) => {\n\t\t\t\ttextbox_value = formatted;\n\t\t\t});\n\t\t} else {\n\t\t\ttextbox_value = value;\n\t\t\tif (!checked && speakers.length > 0 && value) {\n\t\t\t\tdialogue_lines = string_to_dialogue_lines(value);\n\t\t\t}\n\t\t}\n\t\thandle_change();\n\t}\n\n\tasync function value_to_string(\n\t\tvalue: DialogueLine[] | string\n\t): Promise<string> {\n\t\tif (typeof value === \"string\") {\n\t\t\treturn value;\n\t\t}\n\t\treturn await server.format(value);\n\t}\n\n\tfunction string_to_dialogue_lines(text: string): DialogueLine[] {\n\t\tif (!text.trim()) {\n\t\t\treturn [{ speaker: speakers[0] || \"\", text: \"\" }];\n\t\t}\n\t\tconst dialogueLines: DialogueLine[] = [];\n\t\tconst speakerMatches = [];\n\t\tconst speakerRegex = /\\b(Speaker\\s+\\d+):\\s*/g;\n\t\tlet match;\n\n\t\twhile ((match = speakerRegex.exec(text)) !== null) {\n\t\t\tspeakerMatches.push({\n\t\t\t\tspeaker: match[1].trim(),\n\t\t\t\tstartIndex: match.index,\n\t\t\t\tendIndex: match.index + match[0].length\n\t\t\t});\n\t\t}\n\t\tif (speakerMatches.length === 0) {\n\t\t\tdialogueLines.push({ speaker: speakers[0] || \"\", text: text.trim() });\n\t\t} else {\n\t\t\tfor (let i = 0; i < speakerMatches.length; i++) {\n\t\t\t\tconst currentMatch = speakerMatches[i];\n\t\t\t\tconst nextMatch = speakerMatches[i + 1];\n\n\t\t\t\tconst textStart = currentMatch.endIndex;\n\t\t\t\tconst textEnd = nextMatch ? nextMatch.startIndex : text.length;\n\t\t\t\tconst speakerText = text.substring(textStart, textEnd).trim();\n\n\t\t\t\tdialogueLines.push({\n\t\t\t\t\tspeaker:\n\t\t\t\t\t\tspeakers.find(\n\t\t\t\t\t\t\t(s) => s.toLowerCase() === currentMatch.speaker.toLowerCase()\n\t\t\t\t\t\t) || currentMatch.speaker,\n\t\t\t\t\ttext: speakerText\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn dialogueLines;\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tif (\"clipboard\" in navigator) {\n\t\t\tconst text = await value_to_string(value);\n\t\t\tawait navigator.clipboard.writeText(text);\n\t\t\tdispatch(\"copy\", { value: text });\n\t\t\tcopy_feedback();\n\t\t}\n\t}\n\n\tfunction copy_feedback(): void {\n\t\tcopied = true;\n\t\tif (timer) clearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcopied = false;\n\t\t}, 1000);\n\t}\n\n\tasync function handle_submit(): Promise<void> {\n\t\tif (checked) {\n\t\t\tvalue = await server.unformat({ text: textbox_value });\n\t\t}\n\t\tdispatch(\"submit\");\n\t}\n\n\tonMount(async () => {\n\t\tif (typeof value === \"string\") {\n\t\t\ttextbox_value = value;\n\t\t} else if (value && value.length > 0) {\n\t\t\tconst formatted = await value_to_string(value);\n\t\t\ttextbox_value = formatted;\n\t\t} else {\n\t\t\ttextbox_value = \"\";\n\t\t}\n\t});\n</script>\n\n<svelte:window on:click={handle_click_outside} />\n\n<label class:container>\n\t{#if show_label && show_copy_button}\n\t\t{#if copied}\n\t\t\t<button\n\t\t\t\tin:fade={{ duration: 300 }}\n\t\t\t\tclass=\"copy-button\"\n\t\t\t\taria-label=\"Copied\"\n\t\t\t\taria-roledescription=\"Text copied\"><Check /></button\n\t\t\t>\n\t\t{:else}\n\t\t\t<button\n\t\t\t\ton:click={handle_copy}\n\t\t\t\tclass=\"copy-button\"\n\t\t\t\taria-label=\"Copy\"\n\t\t\t\taria-roledescription=\"Copy text\"><Copy /></button\n\t\t\t>\n\t\t{/if}\n\t{/if}\n\n\t<!-- svelte-ignore missing-declaration -->\n\t<BlockTitle {show_label} {info}>{label}</BlockTitle>\n\t{#if speakers.length !== 0}\n\t\t<div class=\"switch-container top-switch\">\n\t\t\t<Switch\n\t\t\t\tlabel=\"Plain Text\"\n\t\t\t\tbind:checked\n\t\t\t\ton:click={async (e) => {\n\t\t\t\t\tif (!e.detail.checked) {\n\t\t\t\t\t\tvalue = await server.unformat({ text: textbox_value });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t{/if}\n\t{#if !checked}\n\t\t<div class=\"dialogue-container\" bind:this={dialogue_container_element}>\n\t\t\t{#each dialogue_lines as line, i}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"dialogue-line\"\n\t\t\t\t\tstyle=\"--speaker-bg-color: {disabled &&\n\t\t\t\t\t(hoveredSpeaker === null || hoveredSpeaker === line.speaker)\n\t\t\t\t\t\t? speakerColors[line.speaker] || 'transparent'\n\t\t\t\t\t\t: 'transparent'}\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"speaker-column\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\ton:mouseenter={() => disabled && (hoveredSpeaker = line.speaker)}\n\t\t\t\t\t\ton:mouseleave={() => disabled && (hoveredSpeaker = null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{#if disabled}\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tbind:value={line.speaker}\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<BaseDropdown\n\t\t\t\t\t\t\t\tbind:value={line.speaker}\n\t\t\t\t\t\t\t\ton:change={() => update_line(i, \"speaker\", line.speaker)}\n\t\t\t\t\t\t\t\tchoices={speakers.map((s) => [s, s])}\n\t\t\t\t\t\t\t\tshow_label={false}\n\t\t\t\t\t\t\t\tcontainer={true}\n\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"text-column\">\n\t\t\t\t\t\t<div class=\"input-container\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tbind:value={line.text}\n\t\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t\ton:input={(event) => handle_input(event, i)}\n\t\t\t\t\t\t\t\ton:focus={(event) => handle_input(event, i)}\n\t\t\t\t\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\t\t\t\t\tif (event.key === \"Escape\" && showTagMenu) {\n\t\t\t\t\t\t\t\t\t\tshowTagMenu = false;\n\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = 0;\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t} else if (showTagMenu && currentLineIndex === i) {\n\t\t\t\t\t\t\t\t\t\tif (event.key === \"ArrowDown\") {\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = Math.min(\n\t\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex + 1,\n\t\t\t\t\t\t\t\t\t\t\t\tfiltered_tags.length - 1\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t} else if (event.key === \"ArrowUp\") {\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = Math.max(\n\t\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t} else if (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\t\tif (filtered_tags[selectedOptionIndex]) {\n\t\t\t\t\t\t\t\t\t\t\t\tinsert_selected_tag();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tbind:this={input_elements[i]}\n\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t{#if showTagMenu && currentLineIndex === i}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid=\"tag-menu\"\n\t\t\t\t\t\t\t\t\tclass=\"tag-menu\"\n\t\t\t\t\t\t\t\t\ttransition:fade={{ duration: 100 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<BaseDropdownOptions\n\t\t\t\t\t\t\t\t\t\tchoices={tags.map((s, i) => [s, i])}\n\t\t\t\t\t\t\t\t\t\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\n\t\t\t\t\t\t\t\t\t\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tshow_options={true}\n\t\t\t\t\t\t\t\t\t\ton:change={(e) => insert_tag(e)}\n\t\t\t\t\t\t\t\t\t\t{offset_from_top}\n\t\t\t\t\t\t\t\t\t\tfrom_top={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if max_lines == undefined || (max_lines && i < max_lines - 1)}\n\t\t\t\t\t\t<div class:action-column={i == 0} class:hidden={disabled}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"add-button\"\n\t\t\t\t\t\t\t\ton:click={() => add_line(i)}\n\t\t\t\t\t\t\t\taria-label=\"Add new line\"\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Plus />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<div class=\"action-column\" class:hidden={disabled || i == 0}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"delete-button\"\n\t\t\t\t\t\t\ton:click={() => delete_line(i)}\n\t\t\t\t\t\t\taria-label=\"Remove current line\"\n\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Trash />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{:else}\n\t\t<div class=\"textarea-container\">\n\t\t\t<textarea\n\t\t\t\tdata-testid=\"textbox\"\n\t\t\t\tbind:value={textbox_value}\n\t\t\t\t{placeholder}\n\t\t\t\trows={5}\n\t\t\t\t{disabled}\n\t\t\t\ton:input={(event) => {\n\t\t\t\t\thandle_input(event, 0);\n\t\t\t\t}}\n\t\t\t\ton:focus={(event) => handle_input(event, 0)}\n\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\tif (event.key === \"Escape\" && showTagMenu) {\n\t\t\t\t\t\tshowTagMenu = false;\n\t\t\t\t\t\tselectedOptionIndex = 0;\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t} else if (showTagMenu) {\n\t\t\t\t\t\tif (event.key === \"ArrowDown\") {\n\t\t\t\t\t\t\tselectedOptionIndex = Math.min(\n\t\t\t\t\t\t\t\tselectedOptionIndex + 1,\n\t\t\t\t\t\t\t\tfiltered_tags.length - 1\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t} else if (event.key === \"ArrowUp\") {\n\t\t\t\t\t\t\tselectedOptionIndex = Math.max(selectedOptionIndex - 1, 0);\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t} else if (event.key === \"Enter\") {\n\t\t\t\t\t\t\tif (filtered_tags[selectedOptionIndex]) {\n\t\t\t\t\t\t\t\tinsert_selected_tag();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tbind:this={textarea_element}\n\t\t\t/>\n\t\t\t{#if showTagMenu}\n\t\t\t\t<div\n\t\t\t\t\tid=\"tag-menu\"\n\t\t\t\t\tclass=\"tag-menu-plain-text\"\n\t\t\t\t\ttransition:fade={{ duration: 100 }}\n\t\t\t\t>\n\t\t\t\t\t<BaseDropdownOptions\n\t\t\t\t\t\tchoices={tags.map((s, i) => [s, i])}\n\t\t\t\t\t\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\n\t\t\t\t\t\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\n\t\t\t\t\t\t\tselectedOptionIndex\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tshow_options={true}\n\t\t\t\t\t\ton:change={(e) => insert_tag(e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n\n\t{#if show_submit_button && !disabled}\n\t\t<div class=\"submit-container\">\n\t\t\t<button class=\"submit-button\" on:click={handle_submit} {disabled}>\n\t\t\t\t<Send />\n\t\t\t</button>\n\t\t</div>\n\t{/if}\n</label>\n\n<style>\n\tlabel {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n\n\t.input-container {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\talign-items: flex-end;\n\t}\n\n\t.dialogue-container {\n\t\tborder: none;\n\t\tborder-radius: var(--input-radius);\n\t\tbackground: var(--input-background-fill);\n\t\tpadding: var(--spacing-md);\n\t\tmargin-bottom: var(--spacing-sm);\n\t\tposition: relative;\n\t}\n\n\t.dialogue-line {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: var(--spacing-sm);\n\t}\n\n\t.dialogue-line:has(.action-column.hidden) .text-column {\n\t\tmargin-right: 0;\n\t}\n\n\t.speaker-column {\n\t\tflex: 0 0 150px;\n\t\tmargin-right: var(--spacing-sm);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.speaker-column textarea {\n\t\tbackground: var(--speaker-bg-color);\n\t\ttransition: background-color 0.2s ease;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--input-padding);\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\tresize: none;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\theight: auto;\n\t\tmin-height: 30px;\n\t\tmax-height: none;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\twhite-space: pre-wrap;\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\toverflow: hidden;\n\t}\n\n\t.text-column {\n\t\tflex: 1;\n\t\tmargin-right: var(--spacing-sm);\n\t}\n\n\t.text-column textarea {\n\t\twidth: 100%;\n\t\tpadding: var(--spacing-sm);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tbackground: var(--speaker-bg-color);\n\t\ttransition: background-color 0.2s ease;\n\t\theight: auto;\n\t\tmin-height: 30px;\n\t\tmax-height: none;\n\t\tflex-grow: 1;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tresize: none;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tpadding: var(--input-padding);\n\t\twidth: 100%;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\twhite-space: pre-wrap;\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\toverflow: hidden;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.text-column textarea {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.dialogue-line[style*=\"--speaker-bg-color: rgba\"] .text-column textarea,\n\t.dialogue-line[style*=\"--speaker-bg-color: rgba\"] .speaker-column textarea {\n\t\tcolor: black;\n\t}\n\n\ttextarea {\n\t\tflex-grow: 1;\n\t\toutline: none !important;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tresize: none;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\toutline: none !important;\n\t\tbackground: var(--input-background-fill);\n\t\tpadding: var(--input-padding);\n\t\twidth: 100%;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\tbox-shadow: var(--input-shadow);\n\t\tborder: var(--input-border-width) solid var(--input-border-color);\n\t\tborder-radius: var(--input-radius);\n\t}\n\n\ttextarea:disabled {\n\t\t-webkit-opacity: 1;\n\t\topacity: 1;\n\t}\n\n\ttextarea:focus {\n\t\tbox-shadow: var(--input-shadow-focus);\n\t\tborder-color: var(--input-border-color-focus);\n\t\tbackground: var(--input-background-fill-focus);\n\t}\n\n\ttextarea::placeholder {\n\t\tcolor: var(--input-placeholder-color);\n\t}\n\n\t.action-column {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\t.add-button {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 25px;\n\t\theight: 25px;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: pointer;\n\t}\n\n\t.delete-button {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 15px;\n\t\theight: 15px;\n\t}\n\n\t.add-button:hover {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.switch-container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t}\n\n\t.switch-container.top-switch {\n\t\tmargin-bottom: var(--spacing-sm);\n\t\tjustify-content: flex-end;\n\t}\n\n\t.submit-container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-top: var(--spacing-sm);\n\t}\n\n\t.submit-container button[disabled] {\n\t\tcursor: not-allowed;\n\t}\n\n\t.submit-button {\n\t\tborder: none;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tfont-size: 14px;\n\t\tcursor: pointer;\n\t\tborder-radius: 15px;\n\t\tmin-width: 30px;\n\t\theight: 30px;\n\t\tflex-shrink: 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground: var(--button-secondary-background-fill);\n\t\tcolor: var(--button-secondary-text-color);\n\t}\n\n\t.submit-button:hover {\n\t\tbackground: var(--button-secondary-background-fill-hover);\n\t}\n\n\t.submit-button:active {\n\t\tbox-shadow: var(--button-shadow-active);\n\t}\n\n\t.submit-button :global(svg) {\n\t\theight: 22px;\n\t\twidth: 22px;\n\t}\n\n\t.copy-button {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: var(--block-label-margin);\n\t\tright: var(--block-label-margin);\n\t\talign-items: center;\n\t\tbox-shadow: var(--shadow-drop);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-top: none;\n\t\tborder-right: none;\n\t\tborder-radius: var(--block-label-right-radius);\n\t\tbackground: var(--block-label-background-fill);\n\t\tpadding: 5px;\n\t\twidth: 22px;\n\t\theight: 22px;\n\t\toverflow: hidden;\n\t\tcolor: var(--block-label-color);\n\t\tfont: var(--font-sans);\n\t\tfont-size: var(--button-small-text-size);\n\t}\n\n\t.tag-menu {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttop: 100%;\n\t\tleft: 0;\n\t}\n\n\t.tag-menu-plain-text {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t}\n\n\t.tag-menu-plain-text :global(.options) {\n\t\tposition: static !important;\n\t\twidth: 100% !important;\n\t\tmax-height: none !important;\n\t\ttop: auto !important;\n\t\tbottom: auto !important;\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDialogue } from \"./Dialogue.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData, CopyData } from \"@gradio/utils\";\n\timport Dialogue from \"./Dialogue.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { DialogueLine } from \"./utils\";\n\texport let gradio: Gradio<{\n\t\tchange: DialogueLine[] | string;\n\t\tsubmit: never;\n\t\tblur: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tfocus: never;\n\t\tclear_status: LoadingStatus;\n\t\tcopy: CopyData;\n\t}>;\n\n\texport let server: {\n\t\tformat: (body: DialogueLine[]) => Promise<string>;\n\t\tunformat: (body: object) => Promise<DialogueLine[]>;\n\t};\n\n\texport let label = \"Dialogue\";\n\texport let speakers: string[] = [];\n\texport let tags: string[] = [];\n\texport let info: string | undefined = undefined;\n\texport let placeholder: string | undefined = undefined;\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: DialogueLine[] | string = [];\n\texport let show_label: boolean;\n\texport let max_lines: number | undefined = undefined;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let show_copy_button = false;\n\texport let loading_status: LoadingStatus | undefined = undefined;\n\texport let value_is_output = false;\n\texport let interactive: boolean;\n\texport let show_submit_button = true;\n</script>\n\n<!-- svelte-ignore missing-declaration -->\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\t{scale}\n\t{min_width}\n\tallow_overflow={true}\n\tpadding={container}\n>\n\t{#if loading_status}\n\t\t<StatusTracker\n\t\t\tautoscroll={gradio.autoscroll}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{...loading_status}\n\t\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t\t/>\n\t{/if}\n\n\t<Dialogue\n\t\tbind:value\n\t\tbind:value_is_output\n\t\t{label}\n\t\t{info}\n\t\t{show_label}\n\t\t{max_lines}\n\t\t{show_copy_button}\n\t\t{container}\n\t\t{speakers}\n\t\t{tags}\n\t\t{placeholder}\n\t\t{show_submit_button}\n\t\t{server}\n\t\ton:change={() => gradio.dispatch(\"change\", value)}\n\t\ton:input={() => gradio.dispatch(\"input\")}\n\t\ton:submit={() => gradio.dispatch(\"submit\")}\n\t\ton:blur={() => gradio.dispatch(\"blur\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\ton:focus={() => gradio.dispatch(\"focus\")}\n\t\ton:copy={(e) => gradio.dispatch(\"copy\", e.detail)}\n\t\tdisabled={!interactive}\n\t/>\n</Block>\n"],"names":["ctx","insert","target","div","anchor","append","button","span","label","$$props","checked","disabled","dispatch","createEventDispatcher","handleClick","event","state","tick","button_intro","create_in_transition","fade","create_if_block_5","textarea","i","each_blocks","func_4","dirty","basedropdownoptions_changes","div_transition","create_bidirectional_transition","func","basedropdown_props","basedropdown_changes","set_input_value","func_1","toggle_class","create_if_block_3","create_if_block_2","div4","div0","div2","div1","div3","if_block0","create_if_block_7","create_if_block_6","if_block3","create_if_block","label_1","get_tag_search_text","text","cursorPosition","lastColonIndex","s","speakers","tags","value","value_is_output","placeholder","info","show_label","container","max_lines","show_copy_button","show_submit_button","color_map","server","dialogue_lines","dialogue_container_element","showTagMenu","currentLineIndex","selectedOptionIndex","filtered_tags","input_elements","textarea_element","old_value","offset_from_top","copied","timer","textbox_value","hoveredSpeaker","defaultColorNames","colorNameToHex","speakerColors","add_line","index","newSpeaker","$$invalidate","formatted","line","delete_line","update_line","key","handle_input","input","cursor_position","show_menu","position_reference_index","search_text","tag","searchText","input_rect","container_rect","insert_selected_tag","currentInput","beforeColon","afterCursor","newText","newCursorPosition","filteredBeforeColon","updatedInput","insert_tag","e","handle_click_outside","tagMenu","handle_change","sync_value","dialogueLines","value_to_string","string_to_dialogue_lines","speakerMatches","speakerRegex","match","currentMatch","nextMatch","textStart","textEnd","speakerText","handle_copy","copy_feedback","handle_submit","onMount","$$self","value$1","change_handler","mouseenter_handler","input_handler","focus_handler","$$value","func_2","func_3","click_handler_1","click_handler_2","focus_handler_1","func_5","func_6","speaker","colorName","element","gradio","elem_id","elem_classes","visible","scale","min_width","loading_status","interactive","clear_status_handler"],"mappings":"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"}